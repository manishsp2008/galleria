<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>galleria</artifactId>
        <groupId>com.myplanet.galleria</groupId>
        <version>1.0.0</version>
        <relativePath>..</relativePath>
    </parent>
    <!--<groupId>com.myplanet.galleria</groupId>-->
    <artifactId>galleria-ejb</artifactId>
    <!--<version>1.0.0</version>-->
    <packaging>ejb</packaging>
    <name>galleria-ejb</name>
    <description>The EJB module containing Session EJBs and JPA entities.</description>
    
    <properties>
        <jacoco.file.path>${project.build.directory}/jacoco.exec</jacoco.file.path>
        <sonar.jacoco.itReportPath>${project.build.directory}/jacoco.exec</sonar.jacoco.itReportPath>
        <sonar.phase>verify</sonar.phase>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.5.6</version>
			<scope>provided</scope>
		</dependency>
        <dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.5</version>
			<scope>provided</scope>
		</dependency>
        <dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-jdk14</artifactId>
			<version>1.5.6</version>
			<scope>provided</scope>
		</dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>4.3.1.Final</version>
        </dependency>
        <dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.2.0.Final</version>
			<scope>test</scope>
		</dependency>
        <dependency>
			<groupId>nl.jqno.equalsverifier</groupId>
			<artifactId>equalsverifier</artifactId>
			<version>1.3.1</version>
			<scope>test</scope>
		</dependency>
        <dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derbyclient</artifactId>
			<version>10.8.1.2</version>
			<scope>test</scope>
		</dependency>
        <dependency>
			<groupId>org.glassfish.extras</groupId>
			<artifactId>glassfish-embedded-all</artifactId>
			<version>3.1</version>
			<scope>test</scope>
		</dependency>
        <!-- Dependencies for DbUnit --> 
		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<version>2.4.8</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.1</version>
			<scope>test</scope>
		</dependency>
    </dependencies>

    <build>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                    <compilerArguments>
                        <endorseddirs>${endorsed.dir}</endorseddirs>
                    </compilerArguments>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-ejb-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <ejbVersion>3.1</ejbVersion>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.1</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${endorsed.dir}</outputDirectory>
                            <silent>true</silent>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>javax</groupId>
                                    <artifactId>javaee-endorsed-api</artifactId>
                                    <version>6.0</version>
                                    <type>jar</type>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.7.1</version>
                <configuration>
                    <includes>
                        <!-- Used to include JUnit 4 Test Suites in the unit-testing phase -->
                        <include>**/*Suite.java</include>
                        <!-- Used to include test classes in the unit-testing phase -->
                        <include>**/*Test.java</include>
                        <include>**/*TestCase.java</include>
                    </includes>
                    <excludes>
                        <!-- Used to ignore IntegrationTest classes in the unit-testing phase -->
                        <exclude>**/*IntegrationSuite.java</exclude>
                        <exclude>**/*IntegrationTest.java</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-test-persistence</id>
                        <phase>process-test-resources</phase>
                        <configuration>
                            <tasks>
                                <!--backup the "proper" persistence.xml -->
                                <copy file="${project.build.outputDirectory}/META-INF/persistence.xml" tofile="${project.build.outputDirectory}/META-INF/persistence.xml.proper" overwrite="true" />
                                <!--replace the "proper" persistence.xml with the "test" version -->
                                <copy file="${project.build.testOutputDirectory}/META-INF/persistence-test.xml" tofile="${project.build.outputDirectory}/META-INF/persistence.xml" overwrite="true" />
                                <!-- copy the "test" version also to the instrumented classes directory 
                                of Cobertura. This is for Sonar and for any future usage of Cobertura -->
                                <copy file="${project.build.testOutputDirectory}/META-INF/persistence-test.xml" tofile="${project.build.directory}/generated-classes/cobertura/META-INF/persistence.xml" overwrite="true" />
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>restore-persistence</id>
                        <phase>prepare-package</phase>
                        <configuration>
                            <tasks>
                                <!--restore the "proper" persistence.xml -->
                                <copy file="${project.build.outputDirectory}/META-INF/persistence.xml.proper" tofile="${project.build.outputDirectory}/META-INF/persistence.xml" overwrite="true" />
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <includes>
                        <!-- Used to include IntegrationSuite classes during integration testing; 
                        avoiding the use of the default naming convention. Includes only suite classes 
                        for now as the startup of the embedded Glassfish container is CPU and disk 
                        intensive. -->
                        <include>**/*IntegrationSuite.java</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.dbdeploy</groupId>
                <artifactId>maven-dbdeploy-plugin</artifactId>
                <version>3.0M3</version>
                <configuration>
                    <scriptdirectory>${basedir}/src/main/sql</scriptdirectory>
                    <driver>org.apache.derby.jdbc.ClientDriver</driver>
                    <!--
                    Use an separate Derby instance for unit testing.
                    Ensure that the values here match with the ones used in persistence-test.xml. 
                    -->
                    <url>${galleria.derby.testInstance.jdbcUrl}</url>
                    <userid>${galleria.derby.testInstance.user}</userid>
                    <password>${galleria.derby.testInstance.password}</password>
                    <delimiter>;</delimiter>
                    <delimiterType>normal</delimiterType>
                </configuration>
                <executions>
                    <execution>
                        <id>update-database</id>
                        <goals>
                            <goal>update</goal>
                        </goals>
                        <phase>process-test-resources</phase>
                    </execution>
                    <execution>
                        <id>update-IT-database</id>
                        <goals>
                            <goal>update</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.derby</groupId>
                        <artifactId>derbyclient</artifactId>
                        <version>10.8.1.2</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <!--This plugin's configuration is used to store Eclipse m2e settings 
                only. It has no influence on the Maven build itself. -->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-antrun-plugin</artifactId>
                                        <versionRange>[1.3,)</versionRange>
                                        <goals>
                                            <goal>run</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>com.dbdeploy</groupId>
                                        <artifactId>
                                            maven-dbdeploy-plugin
                                        </artifactId>
                                        <versionRange>
                                            [3.0M3,)
                                        </versionRange>
                                        <goals>
                                            <goal>update</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    
    <repositories>
        <repository>
            <id>unknown-jars-temp-repo</id>
            <name>A temporary repository created by NetBeans for libraries and jars it could not identify. Please replace the dependencies in this repository with correct ones and delete this repository.</name>
            <url>file:${project.basedir}/lib</url>
        </repository>
        <repository>
            <id>EclipseLink Repo</id>
            <!-- note that ampersands in this URL are escaped because this is in an 
            xml file - un-escape them to use in browser -->
            <url>http://www.eclipse.org/downloads/download.php?r=1&amp;nf=1&amp;file=/rt/eclipselink/maven.repo</url>
        </repository>
        <repository>
            <id>equalsverifier-repository</id>
            <url>http://equalsverifier.googlecode.com/svn/maven/</url>
        </repository>
        <repository>
            <id>download.java.net - Glassfish</id>
            <url>http://download.java.net/maven/glassfish/</url>
        </repository>
        <repository>
            <id>download.java.net</id>
            <name>Java.net Maven Repository</name>
            <url>http://download.java.net/maven/2</url>
        </repository>
    </repositories>
    
    <profiles>
        <profile>
            <!-- Used to add the jacoco agent to the surefire and failsafe JVM commandline 
            only for gathering data for Sonar. -->
            <id>sonar</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.7.1</version>
                        <configuration>
                            <includes>
                                <!-- Used to include JUnit 4 Test Suites in the unit-testing phase -->
                                <include>**/*Suite.java</include>
                                <!-- Used to include test classes in the unit-testing phase -->
                                <include>**/*Test.java</include>
                                <include>**/*TestCase.java</include>
                            </includes>
                            <excludes>
                                <!-- Used to ignore IntegrationTest classes in the unit-testing phase -->
                                <exclude>**/*IntegrationSuite.java</exclude>
                                <exclude>**/*IntegrationTest.java</exclude>
                            </excludes>
                            <argLine>-javaagent:${jacoco.agent.path}=destfile="${jacoco.file.path}"</argLine>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>2.9</version>
                        <configuration>
                            <includes>
                                <!-- Used to include IntegrationSuite classes during integration testing; 
                                avoiding the use of the default naming convention. Includes only suite classes 
                                for now as the startup of the embedded Glassfish container is CPU and disk 
                                intensive. -->
                                <include>**/*IntegrationSuite.java</include>
                            </includes>
                            <argLine>-javaagent:${jacoco.agent.path}=destfile="${jacoco.file.path}"</argLine>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- Used to update the production instance with any changes detected by 
            dbdeploy. This profile is to be used by a build script to push database deltas 
            into production. -->
            <id>production</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.dbdeploy</groupId>
                        <artifactId>maven-dbdeploy-plugin</artifactId>
                        <version>3.0M3</version>
                        <configuration>
                            <scriptdirectory>${basedir}/src/main/sql</scriptdirectory>
                            <driver>org.apache.derby.jdbc.ClientDriver40</driver>
                            <!-- Use a separate Derby instance for production deployments -->
                            <url>${galleria.derby.productionInstance.jdbcUrl}</url>
                            <userid>${galleria.derby.productionInstance.user}</userid>
                            <password>${galleria.derby.productionInstance.password}</password>
                            <delimiter>;</delimiter>
                            <delimiterType>normal</delimiterType>
                        </configuration>
                        <executions>
                            <execution>
                                <id>update-database</id>
                                <goals>
                                    <goal>update</goal>
                                </goals>
                                <phase>install</phase>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.apache.derby</groupId>
                                <artifactId>derbyclient</artifactId>
                                <version>10.8.1.2</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile> 
    </profiles>
    
</project>
